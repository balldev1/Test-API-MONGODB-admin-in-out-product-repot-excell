// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?      @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  report         Report[]
  accounts       Account[]
  OutProduct     OutProduct[]
  InProduct      InProduct[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model OutProduct {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  date      DateTime @map("date")
  time      DateTime
  product   String
  outamount Int
  remark    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model InProduct {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String?   @db.ObjectId
  date      DateTime?
  time      DateTime?
  product   String
  amount    Int
  remark    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  User User? @relation(fields: [userId], references: [id])
}

model Report {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  date      DateTime
  time      DateTime
  product   String
  amount    Int
  remark    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}
